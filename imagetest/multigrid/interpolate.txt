/*
 GLSL fragment shader: interpolate 
 Dr. Orion Sky Lawlor, olawlor@acm.org, 2010-09-04 (Public Domain)
*/
const float M_PI=3.1415926535;
uniform sampler2D srctex;
varying vec3 G; // proxy geometry location, world coordinates
varying vec2 texcoords;
uniform vec2 texdel;
uniform float tweak;

void main(void) {
	vec4 sum=vec4(0.0);
	float d=max(tweak,0.1);
	for (float dx=-1.0;dx<=1.0;dx+=d)
	for (float dy=-1.0;dy<=1.0;dy+=d)
		sum+=texture2D(srctex,texcoords+vec2(dx,dy)*texdel);
	gl_FragColor = sum/sum.a;
}

